function tracToDelete = askWinDeletion(postSpkTrT, IntervalNeg2, ...
            IntervalPos2, MaxT, MinT, wintT, FntS)

dels = 0; % no by default
tracToDelete = [];

%%% window to ask for deletion - if YES you can delete traces
    figDelTr = figure('position', [500 500 220 150],'Name','Trace Deletion',...
        'Toolbar','none','MenuBar','none', 'NumberTitle','off'); 
    set(gca,'Visible','off');    
    hold on;
    set(figDelTr,'Units','normalized')
    pfig = uipanel('Position',[.02 .02 .95 .95]);
    butName = 'Remove traces?';
%     labelBut = uicontrol('Parent',pfig,...
%               'Style','text',...
%               'Units','normalized',...
%               'String',butName,...
%               'Position',[.1 .1 .34 0.5]); 
    butGr = uibuttongroup('Parent',pfig,...
              'Title', butName,...
              'BorderType', 'none', ...
              'Position',[.09 .09 .9 0.9],...
              'SelectionChangeFcn',{@butGroup_callback});
    yesBut = uicontrol(butGr,'Style','radiobutton',...
              'String','Yes',...
              'Units','normalized',...
              'Value',0,...
              'Position',[.15 .4 .3 .5]);
    noBut = uicontrol(butGr,'Style','radiobutton',...
              'String','No',...
              'Units','normalized',...
              'Value',1,...
              'Position',[.45 .4 .3 .5]);
    submitBut = displaySubmitButton();      
    hold off;
    uiwait(figDelTr);

    
function butGroup_callback(hObject,eventdata)  
        switch get(eventdata.NewValue,'String') % Get String of selected object.
            case 'Yes'  %move on - set it up to 1
                dels = 1;
                disp(['Starting to deletion process !!!'])
                
            case 'No' %remove it from deletion - set it up to 0
                dels = 0;                    
                disp(['End deletion process !!!'])           
        end   
end
function sbBut = displaySubmitButton()
sbBut = uicontrol(pfig, 'Style','pushbutton', ...
    'Units','normalized',...
    'String','Submit', ...
    'Position',[0.2 0.03 0.5 0.3], ...
    'Callback',{@submit_callback});  

end
function submit_callback(hObject,eventdata)
  %dels
  
  if dels > 0 
    %disp('....')
    [tracToDelete, plotBTrBut] = plotBurstTraces(postSpkTrT, IntervalNeg2, ...
            IntervalPos2, MaxT, MinT, wintT, FntS);
  end
  close all
  %tracToDelete
end
end